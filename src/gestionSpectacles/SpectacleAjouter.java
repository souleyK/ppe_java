package gestionSpectacles;

import classesMetier.Spectacle;
import classesMetier.Intermittent;
import nezdames.serialisation.NezDamesSerialisation;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author gaellecastel
 */
public class SpectacleAjouter extends javax.swing.JFrame {

    private ArrayList<Intermittent> listeGauche;
    private ArrayList<Intermittent> listeDroite;

    DefaultListModel modeleGauche = new DefaultListModel();
    DefaultListModel modeleDroite = new DefaultListModel();

    public SpectacleAjouter() {
        initComponents();

        //pour que toute l'application ne se ferme pas quand on clique sur la croix rouge
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        listeGauche = new ArrayList<Intermittent>();
        listeDroite = new ArrayList<Intermittent>();
        //on charge la liste de gauche avec tous les intermittents
        listeGauche.addAll(NezDamesSerialisation.lesIntermittents);

        jListGauche.removeAll();

        DefaultListModel modeleGauche = new DefaultListModel();
        DefaultListModel modeleDroite = new DefaultListModel();
        jListDroite.setModel(modeleDroite);

        for (Intermittent unIntermittent : listeGauche) {
            modeleGauche.addElement(unIntermittent.getNomIntermittent() + " " + unIntermittent.getPrenomIntermittent());
        }
        jListGauche.setModel(modeleGauche);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitre1 = new javax.swing.JLabel();
        txtPrixVenteTheorique = new javax.swing.JTextField();
        btnEnvoyer = new javax.swing.JButton();
        btnAnnuler = new javax.swing.JButton();
        lblNumeroObjet = new javax.swing.JLabel();
        lblPrixVenteTheorique = new javax.swing.JLabel();
        lblFichierContraintesTechniques = new javax.swing.JLabel();
        txtTitre = new javax.swing.JTextField();
        lblTitre = new javax.swing.JLabel();
        lblAnneeCreation = new javax.swing.JLabel();
        txtAnneeCreation = new javax.swing.JTextField();
        txtFichierContraintesTechniques = new javax.swing.JTextField();
        txtNumeroObjet = new javax.swing.JTextField();
        lblFichierSynopsis = new javax.swing.JLabel();
        txtFichierSynopsis = new javax.swing.JTextField();
        txtDuree = new javax.swing.JTextField();
        lblDuree = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListDroite = new javax.swing.JList();
        jButtonAjouter = new javax.swing.JButton();
        jButtonRetirer = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListGauche = new javax.swing.JList();
        lblListeGauche = new javax.swing.JLabel();
        lblListeDroite = new javax.swing.JLabel();
        lblImageOlivier = new javax.swing.JLabel();
        lblImageManu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(255, 153, 51));

        lblTitre1.setFont(new java.awt.Font("Hannotate SC", 1, 18)); // NOI18N
        lblTitre1.setForeground(new java.awt.Color(204, 51, 0));
        lblTitre1.setText("CRÉATION D'UN SPECTACLE");

        txtPrixVenteTheorique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrixVenteTheoriqueActionPerformed(evt);
            }
        });

        btnEnvoyer.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        btnEnvoyer.setText("Envoyer");
        btnEnvoyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvoyerActionPerformed(evt);
            }
        });

        btnAnnuler.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        btnAnnuler.setText("Annuler");
        btnAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnnulerActionPerformed(evt);
            }
        });

        lblNumeroObjet.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblNumeroObjet.setForeground(new java.awt.Color(204, 51, 0));
        lblNumeroObjet.setText("Numéro d'objet");

        lblPrixVenteTheorique.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblPrixVenteTheorique.setForeground(new java.awt.Color(204, 51, 0));
        lblPrixVenteTheorique.setText("Prix de vente théorique");

        lblFichierContraintesTechniques.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblFichierContraintesTechniques.setForeground(new java.awt.Color(204, 51, 0));
        lblFichierContraintesTechniques.setText("Fichier contraintes techniques");

        txtTitre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitreActionPerformed(evt);
            }
        });

        lblTitre.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblTitre.setForeground(new java.awt.Color(204, 51, 0));
        lblTitre.setText("Titre");

        lblAnneeCreation.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblAnneeCreation.setForeground(new java.awt.Color(204, 51, 0));
        lblAnneeCreation.setText("Année création");

        txtAnneeCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnneeCreationActionPerformed(evt);
            }
        });

        txtFichierContraintesTechniques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFichierContraintesTechniquesActionPerformed(evt);
            }
        });

        txtNumeroObjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroObjetActionPerformed(evt);
            }
        });

        lblFichierSynopsis.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblFichierSynopsis.setForeground(new java.awt.Color(204, 51, 0));
        lblFichierSynopsis.setText("Fichier synopsis");

        txtFichierSynopsis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFichierSynopsisActionPerformed(evt);
            }
        });

        lblDuree.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblDuree.setForeground(new java.awt.Color(204, 51, 0));
        lblDuree.setText("Durée du spectacle (mn)");

        jListDroite.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListDroite);

        jButtonAjouter.setText(">>");
        jButtonAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterActionPerformed(evt);
            }
        });

        jButtonRetirer.setText("<<");
        jButtonRetirer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetirerActionPerformed(evt);
            }
        });

        jListGauche.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jListGauche);

        lblListeGauche.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblListeGauche.setForeground(new java.awt.Color(204, 51, 0));
        lblListeGauche.setText("Intermittents possibles");

        lblListeDroite.setFont(new java.awt.Font("Hannotate SC", 0, 13)); // NOI18N
        lblListeDroite.setForeground(new java.awt.Color(204, 51, 0));
        lblListeDroite.setText("Intermittents participant à ce spectacle");

        lblImageOlivier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/portraitOlivier.png"))); // NOI18N

        lblImageManu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/portraitManu.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblImageManu)
                        .addGap(138, 138, 138)
                        .addComponent(lblTitre1)
                        .addGap(132, 132, 132)
                        .addComponent(lblImageOlivier))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(btnEnvoyer)
                        .addGap(44, 44, 44)
                        .addComponent(btnAnnuler))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonAjouter)
                                    .addComponent(jButtonRetirer))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFichierContraintesTechniques)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFichierContraintesTechniques, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblListeGauche))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblFichierSynopsis)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtFichierSynopsis, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblListeDroite)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTitre)
                                    .addComponent(lblNumeroObjet)
                                    .addComponent(lblDuree))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtDuree, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(53, 53, 53)
                                            .addComponent(lblAnneeCreation)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtAnneeCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblPrixVenteTheorique))
                                        .addComponent(txtTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNumeroObjet, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrixVenteTheorique, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblImageManu)
                            .addComponent(lblImageOlivier))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTitre1)
                        .addGap(55, 55, 55)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroObjet)
                    .addComponent(txtNumeroObjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitre)
                    .addComponent(txtTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDuree)
                    .addComponent(txtDuree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnneeCreation)
                    .addComponent(txtAnneeCreation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrixVenteTheorique)
                    .addComponent(txtPrixVenteTheorique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFichierContraintesTechniques, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFichierContraintesTechniques, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFichierSynopsis, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFichierSynopsis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jButtonAjouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRetirer))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblListeGauche)
                            .addComponent(lblListeDroite))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnvoyer)
                    .addComponent(btnAnnuler))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(751, 544));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnvoyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvoyerActionPerformed
        // test qui vérifie que les champs sont remplis

        if (txtNumeroObjet.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(null, "Il faut saisir le uméro d'objet du spectacle");
        } else {
            if (txtTitre.getText().compareTo("") == 0) {
                JOptionPane.showMessageDialog(null, "Il faut saisir la rue de l'intermittent");
            } else {
                if (txtDuree.getText().compareTo("") == 0) {
                    JOptionPane.showMessageDialog(null, "Il faut saisir la durée du spectacle");
                } else {

                    if (txtAnneeCreation.getText().compareTo("") == 0) {
                        JOptionPane.showMessageDialog(null, "Il faut saisir l'année de création du spectacle");
                    } else {
                        if (txtPrixVenteTheorique.getText().compareTo("") == 0) {
                            JOptionPane.showMessageDialog(null, "Il faut saisir le prix de vente théorique du spectacle");
                        } else {
                            if (txtFichierContraintesTechniques.getText().compareTo("") == 0) {
                                JOptionPane.showMessageDialog(null, "Il faut saisir le lien vers le fichier des contraintes techniques");
                            } else {
                                if (txtFichierSynopsis.getText().compareTo("") == 0) {
                                    JOptionPane.showMessageDialog(null, "Il faut saisir le lien vers le fichier du sysnopsis");
                                } else {
                                    if (listeDroite.size() == 0) {
                                        JOptionPane.showMessageDialog(null, "Il faut choisir au moins un intermittent");
                                    } else {
                                        // ajout d'un spectacle à la collection lesSpectacles
                                        NezDamesSerialisation.lesSpectacles.add(new Spectacle(txtNumeroObjet.getText(), Integer.parseInt(txtDuree.getText()), txtTitre.getText(), Integer.parseInt(txtAnneeCreation.getText()), Double.parseDouble(txtPrixVenteTheorique.getText()), txtFichierContraintesTechniques.getText(), txtFichierSynopsis.getText(), listeDroite));
                                        JOptionPane.showMessageDialog(null, "Spectacle ajouté");

                                        this.dispose();
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnEnvoyerActionPerformed

    private void btnAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnnulerActionPerformed
        // fermeture de la fenêtre SaisieMenu
        this.dispose();
    }//GEN-LAST:event_btnAnnulerActionPerformed

    private void txtTitreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitreActionPerformed

    private void txtAnneeCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnneeCreationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnneeCreationActionPerformed

    private void txtFichierContraintesTechniquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFichierContraintesTechniquesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFichierContraintesTechniquesActionPerformed

    private void txtFichierSynopsisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFichierSynopsisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFichierSynopsisActionPerformed

    private void txtPrixVenteTheoriqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrixVenteTheoriqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrixVenteTheoriqueActionPerformed

    private void txtNumeroObjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroObjetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroObjetActionPerformed

    private void jButtonAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterActionPerformed

        //recherche de l'intermittent
        String nomPrenom = jListGauche.getSelectedValue().toString();
        for (int i = 0; i < listeGauche.size(); i++) {
            String chaine = listeGauche.get(i).getNomIntermittent() + " " + listeGauche.get(i).getPrenomIntermittent();
            if (chaine.compareTo(nomPrenom) == 0) { // c'est le bon intermittent
                //récupération de l'intermittent pour chargement dans la liste de droite et suppression dans celle de gauche
                //modeleDroite.addElement(listeGauche.get(i).getNomIntermittent()+" "+listeGauche.get(i).getPrenomIntermittent());
                listeDroite.add(listeGauche.get(i));

                //on supprime l'élément choisi de la liste de gauche
                listeGauche.remove(listeGauche.get(i));

                //on réinitialise les listes
                jListGauche.removeAll();
                jListDroite.removeAll();

                //on réinitialise les modèles
                modeleGauche.clear();
                modeleDroite.clear();

                //on recharge les modèles
                for (Intermittent unIntermittent : listeGauche) {
                    modeleGauche.addElement(unIntermittent.getNomIntermittent() + " " + unIntermittent.getPrenomIntermittent());
                }
                for (Intermittent unIntermittent : listeDroite) {
                    modeleDroite.addElement(unIntermittent.getNomIntermittent() + " " + unIntermittent.getPrenomIntermittent());
                }

                //on réaffecte les modèles au listes
                jListGauche.setModel(modeleGauche);
                jListDroite.setModel(modeleDroite);

                break;
            }
        }

    }//GEN-LAST:event_jButtonAjouterActionPerformed

    private void jButtonRetirerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetirerActionPerformed
        //recherche de l'intermittent
        String nomPrenom = jListDroite.getSelectedValue().toString();
        for (int i = 0; i < listeDroite.size(); i++) {
            String chaine = listeDroite.get(i).getNomIntermittent() + " " + listeDroite.get(i).getPrenomIntermittent();
            if (chaine.compareTo(nomPrenom) == 0) { // c'est le bon intermittent
                //récupération de l'intermittent pour chargement dans la liste de droite et suppression dans celle de gauche
                listeGauche.add(listeDroite.get(i));

                listeDroite.remove(listeDroite.get(i));

                jListGauche.removeAll();
                jListDroite.removeAll();

                modeleDroite.clear();
                modeleGauche.clear();
                for (Intermittent unIntermittent : listeDroite) {
                    modeleDroite.addElement(unIntermittent.getNomIntermittent() + " " + unIntermittent.getPrenomIntermittent());
                }

                for (Intermittent unIntermittent : listeGauche) {
                    modeleGauche.addElement(unIntermittent.getNomIntermittent() + " " + unIntermittent.getPrenomIntermittent());
                }

                jListDroite.setModel(modeleDroite);
                jListGauche.setModel(modeleGauche);

                break;
            }
        }
    }//GEN-LAST:event_jButtonRetirerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpectacleAjouter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpectacleAjouter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpectacleAjouter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpectacleAjouter.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpectacleAjouter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnEnvoyer;
    private javax.swing.JButton jButtonAjouter;
    private javax.swing.JButton jButtonRetirer;
    private javax.swing.JList jListDroite;
    private javax.swing.JList jListGauche;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAnneeCreation;
    private javax.swing.JLabel lblDuree;
    private javax.swing.JLabel lblFichierContraintesTechniques;
    private javax.swing.JLabel lblFichierSynopsis;
    private javax.swing.JLabel lblImageManu;
    private javax.swing.JLabel lblImageOlivier;
    private javax.swing.JLabel lblListeDroite;
    private javax.swing.JLabel lblListeGauche;
    private javax.swing.JLabel lblNumeroObjet;
    private javax.swing.JLabel lblPrixVenteTheorique;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JLabel lblTitre1;
    private javax.swing.JTextField txtAnneeCreation;
    private javax.swing.JTextField txtDuree;
    private javax.swing.JTextField txtFichierContraintesTechniques;
    private javax.swing.JTextField txtFichierSynopsis;
    private javax.swing.JTextField txtNumeroObjet;
    private javax.swing.JTextField txtPrixVenteTheorique;
    private javax.swing.JTextField txtTitre;
    // End of variables declaration//GEN-END:variables
}
